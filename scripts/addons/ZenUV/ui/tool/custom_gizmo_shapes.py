# ##### BEGIN GPL LICENSE BLOCK #####
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software Foundation,
#  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# ##### END GPL LICENSE BLOCK #####

# Copyright 2023, Alex Zhornyak, Valeriy Yatsenko

from mathutils import Matrix, Vector


class CustomShapes:

    flip_x: Matrix = Matrix.Diagonal((-1.0, 1.1, 1.1))

    gizmo_template = (
        (-0.539, 1.169, -0.0), (-0.213, 0.769, -0.0),
        (0.974, 0.994, -0.0), (1.027, 1.708, -0.0),
        (0.34, -0.831, -0.0), (0.108, -0.697, -0.0),
        (0.34, -1.1, -0.0), (0.34, -0.831, -0.0),
        (0.108, -1.234, -0.0), (0.34, -1.1, -0.0),
        (1.027, 1.708, -0.0), (0.269, 2.207, -0.0),
        (-0.125, -1.1, -0.0), (0.108, -1.234, -0.0),
        (-0.125, -0.831, -0.0), (-0.125, -1.1, -0.0),
        (0.108, -0.697, -0.0), (-0.125, -0.831, -0.0),
        (-0.454, 1.79, -0.0), (-0.539, 1.169, -0.0),
        (0.269, 2.207, -0.0), (-0.454, 1.79, -0.0),
        (0.428, 0.373, -0.0), (0.974, 0.994, -0.0),
        (0.138, -0.053, -0.0), (0.428, 0.373, -0.0),
        (0.099, -0.488, -0.0), (0.138, -0.053, -0.0),
        )
    # One way arrow (Fit) Gizmo
    one_way_arrow_faces = (
        (0.147, -0.0, 0.0), (0.338, -0.289, 0.0), (0.332, -0.339, 0.0),
        (0.332, -0.339, 0.0), (0.289, -0.352, 0.0), (-0.489, -0.0, 0.0),
        (-0.489, -0.0, 0.0), (0.289, 0.351, 0.0), (0.332, 0.338, 0.0),
        (0.332, 0.338, 0.0), (0.338, 0.288, 0.0), (0.147, -0.0, 0.0),
        (0.147, -0.0, 0.0), (0.332, -0.339, 0.0), (-0.489, -0.0, 0.0),
        (-0.489, -0.0, 0.0), (0.332, 0.338, 0.0), (0.147, -0.0, 0.0),
    )

    one_way_arrow_lines = (
        (-0.4893988072872162, -0.0004932202864438295, 0.0), (0.2889097034931183, 0.35108041763305664, 0.0),
        (-0.4893988072872162, -0.0004932202864438295, 0.0), (0.2889096438884735, -0.35206708312034607, 0.0),
        (0.1472758948802948, -0.000493300030939281, 0.0), (0.3384626805782318, 0.28844350576400757, 0.0),
        (0.1472758948802948, -0.000493300030939281, 0.0), (0.33846256136894226, -0.289430171251297, 0.0),
        (0.3322870433330536, -0.33856555819511414, 0.0), (0.2889096438884735, -0.35206708312034607, 0.0),
        (0.33228716254234314, 0.33757898211479187, 0.0), (0.3384626805782318, 0.28844350576400757, 0.0),
        (0.2889097034931183, 0.35108041763305664, 0.0), (0.33228716254234314, 0.33757898211479187, 0.0),
        (0.33846256136894226, -0.289430171251297, 0.0), (0.3322870433330536, -0.33856555819511414, 0.0),
    )
    # Mirror (Flip) Gizmo
    mirror_gizmo_lines = (
        (-0.13088123500347137, -0.37708112597465515, -2.642720937728882e-05), (-0.5824053287506104, -0.024653395637869835, -2.642720937728882e-05),
        (-0.5824053287506104, -0.024653395637869835, -2.642720937728882e-05), (-0.5824053287506104, 0.02682989463210106, -2.642720937728882e-05),
        (-0.5824053287506104, 0.02682989463210106, -2.642720937728882e-05), (-0.13088123500347137, 0.37925758957862854, -2.642720937728882e-05),
        (-0.13088123500347137, 0.37925758957862854, -2.642720937728882e-05), (-0.09790148586034775, 0.36316266655921936, -2.642720937728882e-05),
        (-0.09790148586034775, 0.36316266655921936, -2.642720937728882e-05), (-0.09790148586034775, -0.36098620295524597, -2.642720937728882e-05),
        (-0.09790148586034775, -0.36098620295524597, -2.642720937728882e-05), (-0.13088123500347137, -0.37708112597465515, -2.642720937728882e-05),
        (0.1316351592540741, -0.37708112597465515, -2.642720937728882e-05), (0.583159327507019, -0.02465338632464409, -2.642720937728882e-05),
        (0.583159327507019, -0.02465338632464409, -2.642720937728882e-05), (0.583159327507019, 0.026829887181520462, -2.642720937728882e-05),
        (0.583159327507019, 0.026829887181520462, -2.642720937728882e-05), (0.1316351592540741, 0.37925758957862854, -2.642720937728882e-05),
        (0.1316351592540741, 0.37925758957862854, -2.642720937728882e-05), (0.09865542501211166, 0.36316266655921936, -2.642720937728882e-05),
        (0.09865542501211166, 0.36316266655921936, -2.642720937728882e-05), (0.09865542501211166, -0.36098620295524597, -2.642720937728882e-05),
        (0.09865542501211166, -0.36098620295524597, -2.642720937728882e-05), (0.1316351592540741, -0.37708112597465515, -2.642720937728882e-05),
    )
    mirror_gizmo_faces = (
        (0.132, -0.377, -0.0), (0.583, -0.025, -0.0), (0.583, 0.027, -0.0),
        (0.583, 0.027, -0.0), (0.132, 0.379, -0.0), (0.099, 0.363, -0.0),
        (0.099, 0.363, -0.0), (0.099, -0.361, -0.0), (0.132, -0.377, -0.0),
        (0.583, 0.027, -0.0), (0.099, 0.363, -0.0), (0.132, -0.377, -0.0),
        (-0.131, -0.377, -0.0), (-0.582, -0.025, -0.0), (-0.582, 0.027, -0.0),
        (-0.582, 0.027, -0.0), (-0.131, 0.379, -0.0), (-0.098, 0.363, -0.0),
        (-0.098, 0.363, -0.0), (-0.098, -0.361, -0.0), (-0.131, -0.377, -0.0),
        (-0.582, 0.027, -0.0), (-0.098, 0.363, -0.0), (-0.131, -0.377, -0.0),
    )

    # Orient Gizmo
    orient_gizmo_lines = (
        (-0.625, 0.084, 0.0), (-0.625, -0.084, 0.0),
        (-0.625, -0.084, 0.0), (-0.57, -0.138, 0.0),
        (-0.57, -0.138, 0.0), (0.57, -0.138, 0.0),
        (0.57, -0.138, 0.0), (0.625, -0.084, 0.0),
        (0.625, -0.084, 0.0), (0.625, 0.084, 0.0),
        (0.625, 0.084, 0.0), (0.57, 0.138, 0.0),
        (0.57, 0.138, 0.0), (-0.57, 0.138, 0.0),
        (-0.57, 0.138, 0.0), (-0.625, 0.084, 0.0),
    )
    orient_gizmo_faces = (
        (-0.625, -0.138, 0.0), (0.625, -0.138, 0.0), (0.625, 0.138, 0.0),
        (-0.625, -0.138, 0.0), (0.625, 0.138, 0.0), (-0.625, 0.138, 0.0),
    )

    # Rotate Gizmo
    rotate_gizmo_lines = (
        (-0.456, -0.028, -0.0), (-0.262, 0.005, -0.0),
        (-0.526, -0.115, -0.0), (-0.173, -0.055, -0.0),
        (-0.173, -0.055, -0.0), (-0.397, 0.299, -0.0),
        (-0.397, 0.299, -0.0), (-0.526, -0.115, -0.0),
        (0.352, 0.195, -0.0), (0.106, 0.393, -0.0),
        (0.106, 0.393, -0.0), (-0.137, 0.361, -0.0),
        (-0.363, -0.084, -0.0), (-0.168, -0.327, -0.0),
        (-0.168, -0.327, -0.0), (0.146, -0.343, -0.0),
        (0.146, -0.343, -0.0), (0.369, -0.119, -0.0),
        (0.369, -0.119, -0.0), (0.352, 0.195, -0.0),
        (-0.386, 0.198, -0.0), (-0.363, -0.084, -0.0),
        (0.011, 0.081, -0.0), (0.021, -0.042, -0.0),
        (-0.048, 0.013, -0.0), (0.075, 0.024, -0.0),
    )
    rotate_gizmo_faces = (
        (0.135, -0.328, 0.0), (-0.174, -0.316, 0.0), (-0.413, -0.094, 0.0),
        (0.135, -0.328, 0.0), (-0.413, -0.094, 0.0), (-0.206, -0.044, 0.0),
        (0.333, 0.179, 0.0), (0.338, -0.109, 0.0), (0.135, -0.328, 0.0),
        (0.135, -0.328, 0.0), (-0.206, -0.044, 0.0), (-0.297, 0.194, 0.0),
        (-0.297, 0.194, 0.0), (-0.192, 0.329, 0.0), (0.104, 0.368, 0.0),
        (0.104, 0.368, 0.0), (0.333, 0.179, 0.0), (0.135, -0.328, 0.0),
        (0.135, -0.328, 0.0), (-0.297, 0.194, 0.0), (0.104, 0.368, 0.0),
    )

    @classmethod
    def rotate_gizmo_lines_inverted(cls):
        return [(Vector(vec) @ cls.flip_x)[:] for vec in cls.rotate_gizmo_lines]

    @classmethod
    def rotate_gizmo_faces_inverted(cls):
        return [(Vector(vec) @ cls.flip_x)[:] for vec in cls.rotate_gizmo_faces]
