<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="exchanger" label="Ex">
    <memberTool name="ex_exporter"/>
    <memberTool name="ex_importer"/>
    <memberTool name="export_obj"/>
    <memberTool name="import_obj"/>
  </toolshelf>

  <tool name="ex_importer" label="Import" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import exchanger
import os

exchange_dir = exchanger.get_exchange_path().replace("\\", '/')
if exchange_dir.endswith(os.sep) is False:
    exchange_dir += os.sep

ex_path = exchange_dir + "exchange.fbx"
main_obj = hou.node('/obj')
#cur_obj = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor).pwd()
temp_names = []

for obj in main_obj.children():
    temp_names.append(obj.name())

#node = hou.hscript("fbximport %s" % ex_path)
nodez = hou.hipFile.importFBX(file_name=ex_path, import_animation=False)
node = nodez[0]
node.setName("exchange", unique_name=True)
node.moveToGoodPosition()

for obj in main_obj.children():
    if obj.name() not in temp_names:
#        hou.moveNodesTo([obj], cur_obj)
        obj.moveToGoodPosition()
        break

temp_names = None
ex_path = None]]></script>
  </tool>

  <tool name="ex_exporter" label="Export" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import exchanger
import os


sel_nodes = hou.selectedNodes()
out_obj = hou.node('/out')
cur_obj = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor).pwd()

if cur_obj.childTypeCategory().name() == 'Object' and sel_nodes:
    exchange_dir = exchanger.get_exchange_path().replace("\\", '/')
    if exchange_dir.endswith(os.sep) is False:
        exchange_dir += os.sep

    ex_path = exchange_dir + "exchange.fbx"

    fbx_node = out_obj.createNode("filmboxfbx")
    fbx_node.moveToGoodPosition()
    fbx_node.parm('sopoutput').set(ex_path)
    fbx_node.parm('startnode').set(sel_nodes[0].path())
    fbx_node.parm('exportkind').set(False)
    fbx_node.parm('sdkversion').set('FBX | FBX201600')
    fbx_node.render()

    fbx_node.destroy()
    ex_path = None  # clear]]></script>
  </tool>

  <tool name="import_obj" label="Import Obj" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import exchanger
import os

sel_nodes = hou.selectedNodes()
cur_obj = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor).pwd()

exchange_dir = exchanger.get_exchange_path().replace("\\", os.sep)
if exchange_dir.endswith(os.sep) is False:
    exchange_dir += os.sep

ex_path = exchange_dir + "exchange.OBJ"

if cur_obj.childTypeCategory().name() == 'Object':
    geo_node = cur_obj.createNode("geo")
    geo_node.moveToGoodPosition()
    geo_node.setCurrent(True, clear_all_selected=True)

    cur_obj = geo_node

file_node = cur_obj.createNode("file")
file_node.parm('file').set(ex_path)
file_node.setHardLocked(True)

file_node.setDisplayFlag(True)
file_node.setRenderFlag(True)
file_node.moveToGoodPosition()
]]></script>
  </tool>

  <tool name="export_obj" label="Export Obj" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import exchanger
import os

sel_nodes = hou.selectedNodes()
cur_obj = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor).pwd()

exchange_dir = exchanger.get_exchange_path().replace("\\", os.sep)
if exchange_dir.endswith(os.sep) is False:
    exchange_dir += os.sep

ex_path = exchange_dir + "exchange.OBJ"

if cur_obj.childTypeCategory().name() == 'Object':
    sel_nodes[0].displayNode().geometry().saveToFile(ex_path)
elif cur_obj.childTypeCategory().name() == 'Sop':
    sel_nodes[0].geometry().saveToFile(ex_path)]]></script>
  </tool>
</shelfDocument>
